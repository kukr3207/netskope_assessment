{
  "url": "https://docs.netskope.com/en/configure-a-publisher-for-software-updates-via-explicit-proxy/",
  "title": "Configure a Publisher for Software Updates via Explicit Proxy - Netskope Knowledge Portal",
  "content": "This section explains how to configure an Ubuntu host to enable Publisherâ€™s software updates via an Explicit Proxy. Note that this only applies to Publisher outbound traffic for OS and Docker updates. The Publisher tunnel itself does not support traversing explicit proxy and must be allowed to connect direct to the Netskope NPA stitcher IP space. Configure the http_proxy and https_proxy environment variables via /etc/environment . Make sure to not modify the PATH= definition that should already exist, as this can impact other Publisher operations. Follow standard vi operating instructions to exit the file once created (Esc then :wq). Here is an example used in a configuration to ensure *. <tenant-domain> (replace with your tenant) is excluded. 169.254.0.0/16 will also need to be excluded for AWS installations. sudo vi /etc/environment export http_proxy=\"http://10.1.10.1:3128/\" export https_proxy=\"http://10.1.10.1:3128/\" export no_proxy=\"localhost, 127.0.0.1, 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16, <tenant-domain>\" Next configure docker-ce proxy settings, similar to the Ubuntu settings. sudo mkdir /etc/systemd/system/docker.service.d/ sudo vi /etc/systemd/system/docker.service.d/http-proxy.conf [Service] Environment=\"HTTP_PROXY=http://10.1.10.1:3128\" Environment=\"HTTPS_PROXY=http://10.1.10.1:3128\" Exit vi and then restart the docker services to make the changes take effect. sudo systemctl daemon-reload sudo systemctl restart docker Log out and log in so the /etc/environment variables are applied. Test connectivity by attempting to Upgrade the Publisher through the Netskope UI.",
  "content_length": 1621,
  "crawl_timestamp": 1750781231.781846
}